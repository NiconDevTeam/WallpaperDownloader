# log4j.properties

# Logger settings
# Vamos a tener dos loggers, stdout y logfile configurados a nivel de
# logging de tipo INFO. El rootLogger será el padre de todos los Loggers
# en caso de que definamos más de uno
log4j.rootLogger=INFO, stdout, logfile

# Set up a logger to the console
# El logger stdout escribe por consola
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{HH:mm:ss}] %-5p %C{1}:%L - %m%n
# Use this to only see log messages beyond a certain threshold in the console
log4j.appender.stdout.Threshold=INFO

# Set up a logger to a log file
# El logger logfile escribe en un fichero
log4j.appender.logfile=org.apache.log4j.RollingFileAppender
# Only 2 backup logs maximum
log4j.appender.logfile.MaxFileSize=10MB
log4j.appender.logfile.MaxBackupIndex=2
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=[%d{HH:mm:ss}] %t %-5p %C{1}:%L - %m%n
# Use this to only see log messages beyond a certain threshold in the console
log4j.appender.logfile.Threshold=INFO
# El nombre del fichero está comentado porque lo vamos a configurar a través de la 
# aplicación, mediante la clase PropertiesManager y el método configLog
# De esta manera podemos hacerlo dinámicamente
#log4j.appender.logfile.File=/home/egarcia/test.log
#log4j.appender.logfile.DatePattern='.'yyyy-MM-dd